<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - ProTrack</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="/css/styles.css" rel="stylesheet">
</head>
<body class="bg-light">
    <%- include('_navbar') %>

    <main>
        <div class="container mt-4">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h1 class="h3 mb-1">Welcome back, <%= user.username %>!</h1>
                        <p class="text-muted mb-0">Today is <%= new Date(today).toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) %></p>
                    </div>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addTaskModal">
                        <i class="fas fa-plus me-2"></i>
                        Add New Task
                    </button>
                </div>
            </div>
        </div>

        <!-- Task Statistics -->
        <div class="row mb-4">
            <div class="col-md-4">
                <div class="card bg-primary text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">Total Tasks</h6>
                                <h3 class="mb-0"><%= tasks.length %></h3>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-tasks fa-2x opacity-75"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card bg-success text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">Completed</h6>
                                <h3 class="mb-0"><%= tasks.filter(t => t.is_completed).length %></h3>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-check-circle fa-2x opacity-75"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card bg-warning text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">Pending</h6>
                                <h3 class="mb-0"><%= tasks.filter(t => !t.is_completed).length %></h3>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-clock fa-2x opacity-75"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Tasks List -->
        <div class="row">
            <div class="col-12">
                <div class="card shadow-sm">
                                         <div class="card-header bg-white">
                         <div class="d-flex justify-content-between align-items-center">
                             <h5 class="mb-0">
                                 <i class="fas fa-list me-2"></i>
                                 All Tasks
                             </h5>
                             <div class="btn-group btn-group-sm" role="group">
                                 <button type="button" class="btn btn-outline-primary active" onclick="filterTasks('all')">All</button>
                                 <button type="button" class="btn btn-outline-danger" onclick="filterTasks('high')">High</button>
                                 <button type="button" class="btn btn-outline-warning" onclick="filterTasks('medium')">Medium</button>
                                 <button type="button" class="btn btn-outline-success" onclick="filterTasks('low')">Low</button>
                             </div>
                         </div>
                     </div>
                    <div class="card-body">
                        <% if (tasks.length === 0) { %>
                                                         <div class="text-center py-5">
                                 <i class="fas fa-clipboard-list fa-3x text-muted mb-3"></i>
                                 <h5 class="text-muted">No tasks yet</h5>
                                 <p class="text-muted">Add your first task to get started!</p>
                                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addTaskModal">
                                    <i class="fas fa-plus me-2"></i>
                                    Add Task
                                </button>
                            </div>
                        <% } else { %>
                            <div class="table-responsive">
                                <table class="table table-hover">
                                                                         <thead>
                                         <tr>
                                             <th>Status</th>
                                             <th>Priority</th>
                                             <th>Task</th>
                                             <th>Description</th>
                                             <th>Due Date</th>
                                             <th>Actions</th>
                                         </tr>
                                     </thead>
                                    <tbody>
                                        <% tasks.forEach(task => { %>
                                            <tr class="<%= task.is_completed ? 'table-success' : (new Date(task.due_date) < new Date(today) ? 'table-danger' : '') %>">
                                                                                                 <td>
                                                     <button class="btn btn-sm <%= task.is_completed ? 'btn-success' : 'btn-outline-secondary' %>" 
                                                             onclick="toggleTask(<%= task.id %>)">
                                                         <i class="fas <%= task.is_completed ? 'fa-check' : 'fa-circle' %>"></i>
                                                     </button>
                                                 </td>
                                                 <td>
                                                     <span class="badge badge-<%= task.priority.toLowerCase() %>">
                                                         <i class="fas fa-flag me-1"></i>
                                                         <%= task.priority %>
                                                     </span>
                                                 </td>
                                                 <td>
                                                     <span class="<%= task.is_completed ? 'text-decoration-line-through' : '' %>">
                                                         <%= task.title %>
                                                     </span>
                                                 </td>
                                                <td>
                                                    <small class="text-muted">
                                                        <%= task.description || 'No description' %>
                                                    </small>
                                                </td>
                                                <td>
                                                    <span class="badge <%= new Date(task.due_date) < new Date(today) ? 'bg-danger' : 'bg-secondary' %>">
                                                        <%= new Date(task.due_date).toLocaleDateString() %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <div class="btn-group btn-group-sm">
                                                        <button class="btn btn-outline-primary" onclick="editTask(<%= task.id %>)">
                                                            <i class="fas fa-edit"></i>
                                                        </button>
                                                        <button class="btn btn-outline-danger" onclick="deleteTask(<%= task.id %>)">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        <% }); %>
                                    </tbody>
                                </table>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Task Modal -->
    <div class="modal fade" id="addTaskModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-plus me-2"></i>
                        Add New Task
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form id="addTaskForm">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="taskTitle" class="form-label">Task Title *</label>
                            <input type="text" class="form-control" id="taskTitle" name="title" required>
                        </div>
                        <div class="mb-3">
                            <label for="taskDescription" class="form-label">Description</label>
                            <textarea class="form-control" id="taskDescription" name="description" rows="3"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="taskDueDate" class="form-label">Due Date *</label>
                            <input type="date" class="form-control" id="taskDueDate" name="due_date" required>
                        </div>
                        <div class="mb-3">
                            <label for="taskPriority" class="form-label">Priority</label>
                            <select class="form-select" id="taskPriority" name="priority">
                                <option value="High">High</option>
                                <option value="Medium" selected>Medium</option>
                                <option value="Low">Low</option>
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-2"></i>
                            Save Task
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Task Modal -->
    <div class="modal fade" id="editTaskModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-edit me-2"></i>
                        Edit Task
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form id="editTaskForm">
                    <input type="hidden" id="editTaskId">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="editTaskTitle" class="form-label">Task Title *</label>
                            <input type="text" class="form-control" id="editTaskTitle" name="title" required>
                        </div>
                        <div class="mb-3">
                            <label for="editTaskDescription" class="form-label">Description</label>
                            <textarea class="form-control" id="editTaskDescription" name="description" rows="3"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="editTaskDueDate" class="form-label">Due Date *</label>
                            <input type="date" class="form-control" id="editTaskDueDate" name="due_date" required>
                        </div>
                        <div class="mb-3">
                            <label for="editTaskPriority" class="form-label">Priority</label>
                            <select class="form-select" id="editTaskPriority" name="priority">
                                <option value="High">High</option>
                                <option value="Medium">Medium</option>
                                <option value="Low">Low</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="editTaskCompleted" name="is_completed">
                                <label class="form-check-label" for="editTaskCompleted">
                                    Mark as completed
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-2"></i>
                            Update Task
                        </button>
                    </div>
                </form>
            </div>
            </div>
        </div>
    </main>

    <%- include('_footer') %>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Set default date to today
        document.getElementById('taskDueDate').value = new Date().toISOString().split('T')[0];

        // Add Task
        document.getElementById('addTaskForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const taskData = {
                title: formData.get('title'),
                description: formData.get('description'),
                due_date: formData.get('due_date'),
                priority: formData.get('priority')
            };

            try {
                const response = await fetch('/tasks', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(taskData)
                });

                if (response.ok) {
                    // Close the modal first
                    const modal = bootstrap.Modal.getInstance(document.getElementById('addTaskModal'));
                    if (modal) {
                        modal.hide();
                    }
                    // Reset the form
                    this.reset();
                    // Reload the page to show the new task
                    location.reload();
                } else {
                    const error = await response.json();
                    alert('Error: ' + error.error);
                }
            } catch (error) {
                console.error('Error creating task:', error);
                alert('Error creating task');
            }
        });

        // Toggle Task Completion
        async function toggleTask(taskId) {
            try {
                const response = await fetch(`/tasks/${taskId}/toggle`, {
                    method: 'PATCH'
                });

                if (response.ok) {
                    location.reload();
                } else {
                    alert('Error toggling task');
                }
            } catch (error) {
                alert('Error toggling task');
            }
        }

        // Edit Task
        async function editTask(taskId) {
            try {
                const response = await fetch(`/tasks/${taskId}`);
                const task = await response.json();
                
                document.getElementById('editTaskId').value = task.id;
                document.getElementById('editTaskTitle').value = task.title;
                document.getElementById('editTaskDescription').value = task.description || '';
                document.getElementById('editTaskDueDate').value = task.due_date;
                document.getElementById('editTaskPriority').value = task.priority || 'Medium';
                document.getElementById('editTaskCompleted').checked = task.is_completed === 1;
                
                new bootstrap.Modal(document.getElementById('editTaskModal')).show();
            } catch (error) {
                alert('Error loading task');
            }
        }

        // Update Task
        document.getElementById('editTaskForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const taskId = document.getElementById('editTaskId').value;
            const formData = new FormData(this);
            const taskData = {
                title: formData.get('title'),
                description: formData.get('description'),
                due_date: formData.get('due_date'),
                priority: formData.get('priority'),
                is_completed: formData.get('is_completed') ? 1 : 0
            };

            try {
                const response = await fetch(`/tasks/${taskId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(taskData)
                });

                if (response.ok) {
                    location.reload();
                } else {
                    const error = await response.json();
                    alert('Error: ' + error.error);
                }
            } catch (error) {
                alert('Error updating task');
            }
        });

        // Delete Task
        async function deleteTask(taskId) {
            if (confirm('Are you sure you want to delete this task?')) {
                try {
                    const response = await fetch(`/tasks/${taskId}`, {
                        method: 'DELETE'
                    });

                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Error deleting task');
                    }
                } catch (error) {
                    alert('Error deleting task');
                }
            }
        }

        // Filter tasks by priority
        function filterTasks(priority) {
            const rows = document.querySelectorAll('tbody tr');
            const buttons = document.querySelectorAll('.btn-group .btn');
            
            // Update active button
            buttons.forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');
            
            rows.forEach(row => {
                const priorityBadge = row.querySelector('.badge');
                if (priorityBadge) {
                    const taskPriority = priorityBadge.textContent.trim().toLowerCase();
                    if (priority === 'all' || taskPriority === priority) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                }
            });
        }
    </script>
</body>
</html> 